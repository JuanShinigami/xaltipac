<?xml version="1.0" encoding="UTF-8"?>
<!--
	- DispatcherServlet application context for pts web tier.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:oxm="http://www.springframework.org/schema/oxm"
       xsi:schemaLocation="http://www.springframework.org/schema/oxm
         http://www.springframework.org/schema/oxm/spring-oxm.xsd
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd">
    
    <bean id="viewResolver" class="org.thymeleaf.spring3.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="templateEngine" />
		<property name="characterEncoding" value="UTF-8" />
		<property name="contentType" value="text/html; charset=UTF-8" />
	</bean>
    
    <bean id="templateResolver" 
        class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML5" />
        <property name="characterEncoding" value="UTF-8" />
        <!-- Template cache is set to false (default is true).        -->
        <property name="cacheable" value="false" />
    </bean>

    <bean id="templateEngine" class="org.thymeleaf.spring3.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver" />
        <property name="additionalDialects">
        <set>
          <bean class="org.thymeleaf.extras.springsecurity3.dialect.SpringSecurityDialect"/>
        </set>
      </property>
    </bean>

         
    <!--
    - The ContentNegotiatingViewResolver delegates to the InternalResourceViewResolver and BeanNameViewResolver,
    - and uses the requested media type (determined by the path extension) to pick a matching view. 
    - When the media type is 'text/html', it will delegate to the InternalResourceViewResolver's JstlView, 
    - otherwise to the BeanNameViewResolver.
    -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        
        <property name="viewResolvers">
        	<list>
            
                <!-- Used here for 'xml' and 'atom' views  -->
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
                    <property name="order" value="1"/>
                </bean>
                
                <bean class="org.thymeleaf.spring3.view.ThymeleafViewResolver">
                    <property name="templateEngine" ref="templateEngine" />
                    <property name="order" value="2"/>
                    <!-- We need to set exclusions because Content Negotiation tries to resolve from -->
                    <!-- Thymeleaf even if a specific view bean (of a different class) is already    -->
                    <!-- found, which might cause exceptions (e.g. ThymeleafView does not have a     -->
                    <!-- 'marshaller' property).                                                     -->
                    <property name="excludedViewNames" value="*.xml" />
                </bean>
        
                 <!-- Default viewClass: JSTL view (JSP with html output) -->
<!--                 <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
<!--                     Example: a logical view name of 'vets' is mapped to '/WEB-INF/jsp/vets.jsp' --> 
<!--                     <property name="prefix" value="/WEB-INF/jsp/"/> -->
<!--                     <property name="suffix" value=".jsp"/> -->
<!--                     <property name="order" value="3"/> -->
<!--                 </bean> -->
                
        	</list>
        </property>
    </bean>
    
</beans>