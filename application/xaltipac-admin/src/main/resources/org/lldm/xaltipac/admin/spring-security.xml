<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">


	<security:http auto-config="true" use-expressions="true"
		access-denied-page="/denegado">

		<security:csrf />

		<security:headers>
			<security:xss-protection />
		</security:headers>

		<security:intercept-url pattern="/login"
			access="permitAll" />
		<security:intercept-url pattern="/login/**"
			access="permitAll" />
		<security:intercept-url pattern="/resources/**"
			access="permitAll" />
		<security:intercept-url pattern="/**"
			access="hasRole('ROLE_USER')" />

		<security:form-login login-page="/login"
			default-target-url="/login" authentication-failure-url="/login"
			always-use-default-target="true" authentication-success-handler-ref="MyAuthenticationSuccessHandler" />

		<security:logout logout-success-url="/login"
			invalidate-session="true" logout-url="/logout" />

		<security:session-management
			session-fixation-protection="newSession">
			<!-- To invalidate the current session and to create a new one when a 
				user authenticates -->
		</security:session-management>

	</security:http>

	<security:global-method-security
		secured-annotations="enabled" pre-post-annotations="enabled" />

	<security:authentication-manager>
		<security:authentication-provider
			ref="clusterDaoAuthenticationProvider">
		</security:authentication-provider>
	</security:authentication-manager>

	<bean id="loggerListener"
		class="org.springframework.security.authentication.event.LoggerListener">
	</bean>



</beans>